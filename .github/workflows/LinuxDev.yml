name: LinuxDev

on:
  push:
    branches: [ development, linux ]
  pull_request:
    branches: [ development, linux ]
    
jobs:

  build-Ubuntu:
    
    runs-on: ubuntu-18.04

    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      matrix:
        python-version: [3.8]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64' 

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Retrieve submodules
      run: git submodule update --init --recursive
    
    - name: Build Python
      run: |
        sudo apt-get install libgl1-mesa-dev
        sudo apt-get install xorg-dev
        cd Dependencies/cpython
        mkdir debug
        cd debug
        ../configure --enable-shared --prefix $PWD
        sudo make && sudo make install
        cd ..
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True

    - name: Build DearPyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Test DearPyGui Wheel
      run: |
        cd /home/runner/work/DearPyGui/DearPyGui/Distribution
        python BuildPythonWheel.py /home/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python -m setup bdist_wheel --plat-name manylinux1_x86_64 --dist-dir /home/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Test DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python -m twine upload --repository testpypi dist/* -u __token__ -p ${{ secrets.test_pypi_password }} --skip-existing

  build-Ubuntu37:
    
    runs-on: ubuntu-18.04

    strategy:

      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      matrix:
        python-version: [3.7]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64' 

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Retrieve submodules
      run: |
        git submodule update --init --recursive
        cd Dependencies
        cd cpython
        git checkout v3.7.9
    
    - name: Build Python
      run: |
        sudo apt-get install libgl1-mesa-dev
        sudo apt-get install xorg-dev
        cd Dependencies/cpython
        mkdir debug
        cd debug
        ../configure --enable-shared --prefix $PWD
        sudo make && sudo make install
        cd ..
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True -DMV37DIST=True

    - name: Build DearPyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Test DearPyGui Wheel
      run: |
        cd /home/runner/work/DearPyGui/DearPyGui/Distribution
        python BuildPythonWheel.py /home/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python -m setup bdist_wheel --plat-name manylinux1_x86_64 --dist-dir /home/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Test DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python -m twine upload --repository testpypi dist/* -u __token__ -p ${{ secrets.test_pypi_password }} --skip-existing
